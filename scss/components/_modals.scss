 //Form response for displaying server messages
 .modal {
   //modal outer with background, covers whole screen
   display: grid;
   place-items: center;
   background-color: rgba(0, 0, 0, 0.5);
   position: fixed;
   top: 0;
   left: 0;
   right: 0;
   bottom: 0;
   z-index: 1000;
   opacity: 0;
   pointer-events: none;
   transition: opacity 300ms ease-out;

 }


 //modal header, align as a column on small screens
 .modal-header {
   display: flex;
   flex-direction: column;
   align-items: center;

   .modal-title {
     align-self: self-start;
   }

   .btn-close {
     color: $primary;
     height: 2.5rem;
     width: 2.5rem;

     .x-mark {
       display: none;
     }
   }
 }

 @media(min-width:$md) {
   .modal-header {
     flex-direction: row-reverse;
     justify-content: space-between;

     .btn-close .x-mark {
       display: initial;
     }

     .btn-close .line {
       display: none;
     }
   }

   .modal-content {
     width: 100%;
     max-width: 500px;
   }
 }

 @media(min-width:$lg) {
   .modal-content {
     max-width: 700px;
   }
 }

 .modal-footer {
   width: 100%;
   display: flex;
   gap: $spacer-2;
   justify-content: space-between;
 }

 .modal-close {
   //header section with close button set to the right
   padding: $spacer-2 1rem $spacer-2 1rem;
   display: flex;
   justify-content: flex-end;
   align-items: center;
   width: 100%;
   border-top-left-radius: inherit;
   border-top-right-radius: inherit;
 }



 //active classes to display modal when triggered
 .modal-active {
   opacity: 1;
   transition: opacity 400ms ease-out;
   pointer-events: all;
 }

 //custom modal for image uploads in gallery
 .modal {
   background-color: rgba(0, 0, 0, 0.7);
   place-items: end;

   .modal-content {
     margin-bottom: env(safe-area-inset-bottom, 10px);
     display: flex;
     flex-direction: column;
     justify-content: flex-end;
     width: 100%;
     height: max-content;
     place-items: unset;
     background-color: #fff;
     border-top-right-radius: $border-radius;
     border-top-left-radius: $border-radius;
     padding: $spacer-2;

     input {
       width: 100%;
     }
   }

   .close {
     justify-content: center;

   }

   .btn-close {
     color: $primary;
     height: 2.5rem;
     width: 2.5rem;

     .x-mark {
       display: none;
     }
   }
 }

 .confirm-modal .modal-content {
   padding: $spacer-2;
 }

 @media(min-width:$md) {
   .modal {
     place-items: center;

     .btn-close .x-mark {
       display: initial;
     }

     .btn-close .line {
       display: none;
     }
   }

   .upload-modal .modal-content {
     border-radius: $border-radius;

   }

   .modal-content {
     border-radius: $border-radius;

     .button-section {
       width: 100%;
     }
   }
 }

 //off canvas, similar to a modal
 //background, takes up full screen
 .offcanvas_bg {
   position: fixed;
   inset: 0;
   background-color: rgb(32, 32, 32);
   z-index: 1000;
 }

 //canvas itself takes up full screen width when on small screens
 .offcanvas_canvas{
  position: fixed;
  top: 0;
  bottom: 0;
  right: 0;
  z-index: 1050;
  background-color: #fff;
  display: flex;
  flex-direction: column;
  overflow: scroll;
  width: 100%;
  .std-card{
    border: 1px solid $primary;
  }
  .form-row{
  flex-direction: column;
    align-items: flex-start;
  }
 }
 .offcanvas_header{
  padding: $spacer-3;
  flex-direction: row;
  justify-content: space-between;
  .btn-close .x-mark {
    display: initial;
  }
 }
 .offcanvas_body{
  padding: 0 $spacer-3;
 }
 //toggle this class when canvas is active to stop scrolling
 body.offcanvas_active{
  overflow: clip;
 }

 //large screen sizes
 @media(min-width: $md){
  .offcanvas_canvas{
    width: 80%;
    max-width: 450px;
  }
 }
//Alert colour for remove guest
.remove-guest-header{
  color: red;
}

 //active and hidden states with data attributes
 
 .offcanvas_bg[data-state="closed"] {
  opacity: 0;
  pointer-events: none;
}
.offcanvas_bg[data-state="opened"] {
  opacity: 0.5;
  transition: opacity 600ms ease-out;
}
 
 .offcanvas_canvas[data-state="closed"] {
  display: none;
}
.offcanvas_canvas[data-state="closing"] {
  animation: navclose 600ms cubic-bezier(.86,0,.07,1) forwards;
  
}
.offcanvas_bg[data-state="closing"] {
  opacity: 0;
  transition: opacity 600ms ease-out;
  
}
.offcanvas_canvas[data-state="opened"] {
  display: flex;
  animation: navopen 600ms cubic-bezier(.86,0,.07,1) forwards;
}
@keyframes navclose {
  100% {
      transform:translateX(100%);
  }

  0% {
      transform:translateX(0%)
  }
}

@keyframes navopen {
  0% {
      transform:translateX(100%);
  }

  100% {
      transform:translateX(0);
  }
}